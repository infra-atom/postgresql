max_wal_senders				20
Задаёт максимально допустимое число одновременных подключений резервных серверов или клиентов потокового копирования (т. е. максимальное количество одновременно работающих процессов передачи WAL). 
Передающие WAL процессы учитываются в общем числе соединений, так что этот параметр не может превышать max_connections.


max_wal_size				16384
Отдельный серверный процесс контрольных точек автоматически выполняет контрольные точки с заданной частотой. Контрольные точки производятся каждые checkpoint_timeout секунд либо при приближении к пределу max_wal_size, если это имеет место раньше. Значения по 
умолчанию: 5 минут и 1 Гбайт, соответственно.
Контрольные точки — это точки в последовательности транзакций, в которых гарантируется, что файлы с данными и индексами были обновлены всей информацией записанной перед контрольной точкой. Во время контрольной точки, все «грязные» страницы данных, находящиеся в 
памяти, сохраняются на диск, а в файл журнала записывается специальная запись контрольной точки. 
Уменьшение значений checkpoint_timeout и/или max_wal_size приводит к учащению контрольных точек. Это позволяет ускорить восстановление после краха (поскольку для воспроизведения нужно меньше данных), но с другой стороны нужно учитывать дополнительную нагрузку, 
возникающую вследствие более частого сброса «грязных» страниц данных на диск. 


min_wal_size				16384
Значение min_wal_size ограничивает снизу число файлов WAL, которые будут переработаны для будущего использования; такой объём WAL всегда будет перерабатываться, даже если система простаивает и оценка использования говорит, что нужен совсем небольшой WAL.


wal_keep_size				2048
Практически все решения по отказоустойчивости используют потоковую репликацию, например Patroni, Stolon, repmgr. Но есть нюанс: потоковая репликация не гарантирует, что все изменения — WAL-ы (Write Ahead Log) — будут доставлены. Иначе говоря, на лидере могут 
спокойно удалиться те WAL-ы, которые не успели примениться на реплике.
Да, можно защититься при помощи завышения параметра wal_keep_size. Но у этого метода есть минусы: 
Лидер временно может хранить WAL-ов больше, чем указано в параметре wal_keep_size (например, из-за долгой транзакции), которые позже будут удалены. Нет гарантий, что удаленные WAL-ы будут доставлены до реплик;
wal_keep_size вынуждает лидера хранить ненужные WAL-ы, которые применены на репликах и просто занимают место.


https://postgrespro.ru/docs/postgrespro/10/populate#POPULATE-MAX-WAL-SIZE
https://habr.com/ru/companies/postgrespro/articles/460423/
https://habr.com/ru/companies/avito/articles/781892/
https://habr.com/ru/companies/postgrespro/articles/908604/
https://habr.com/ru/companies/postgrespro/articles/904462/
https://yandex.cloud/ru/docs/managed-postgresql/concepts/settings-list
